// base/_typography.scss
@use "../abstracts/mixins" as *;
@use "../abstracts/tokens/spacing" as *;
@use "sass:map";

.flow {
  @include flow-spacing;
}
body {
  @include text-style();
  color: var(--color-text-primary);
  background-color: var(--color-background-primary);
}

@each $level in (1, 2, 3, 4, 5, 6) {
  h#{$level} {
    @include heading($level);
    margin-top: map.get($spacing, "6");
    margin-bottom: map.get($spacing, "4");

    &:first-child {
      margin-top: 0;
    }
  }
}

code {
  @include text-style("sm", "normal", "base", "normal", "mono");
}

small {
  @include text-style("xs", "normal", "base");
  color: var(--color--text-tertiary);
}

// Paragraph styles
p {
  margin-bottom: map.get($spacing, "4");
  max-width: 70ch;
  color: var(--color-text-secondary);

  &:last-child {
    margin-bottom: 0;
  }
}

// Link styles
a {
  color: var(--color-link);
  text-decoration-thickness: 1px;
  text-underline-offset: 0.2em;
  transition: all 0.2s ease;

  &:hover {
    color: var(--color-link-hover);
    text-decoration-thickness: 2px;
  }
}

// Groups
* + h2 {
  margin-top: map.get($spacing, '8');
}

* + h3, 
* + h4, 
* + h5, 
* + h6 {
  margin-top: map.get($spacing, '6');
}

// Lists maintain rhythm
ul, ol {
  margin-top: map.get($spacing, '4');
  margin-bottom: map.get($spacing, '4');
  padding-left: map.get($spacing, '5');
  
  li + li {
    //margin-top: map.get($spacing, '2');
  }
}

// Maintain rhythm in nested lists
ul ul, 
ul ol, 
ol ul, 
ol ol {
  margin-top: map.get($spacing, '2');
  margin-bottom: 0;
}


// Blockquote styles
blockquote {
  border-left: 3px solid var(--color--primary);
  padding-left: 1em;
  margin: 2em 0;
  font-style: italic;
  color: var(--color--text-secondary);
}

// Selection styles
::selection {
  background-color: rgba(var(--color--primary, 0.1));
  color: var(--color--primary);
}
